1. Redis是什么？
    Redis是一个高性能的，开源的，C语言开发的，键值对存储数据的nosql数据库。
    REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。
    Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。

NoSQL：not only sql，泛指非关系型数据库 Redis/MongoDB/Hbase Hadoop

关系型数据库：MySQL、oracle、SqlServer

2. Redis特性
    Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用
    Redis不仅仅支持简单的key-value类型的数据，同时还提供List，set等数据类型
    Redis支持数据的备份

3. Redis有什么用？
    Redis的主要作用：快速存取

4. Redis应用场景
    点赞/秒杀/直播平台的在线好友列表/商品排行榜/单点登录

Redis怎么用？
官网地址：https://redis.io/
命令地址：http://doc.redisfans.com/

5. Redis的五大数据类型以及应用场景

string/list/set/hash/zset

6.1 Redis的安装与启动--ubuntu
    安装
    sudo apt-get install redis-server

    查看帮助命令
    redis-server --help

    编辑Redis配置文件
    sudo vim /etc/redis/redis.conf
    将daemonize no改为 daemonize yes保存退出

    启动
    redis-server

    打开服务
    sudo service redis start

    关闭服务
    sudo service redis stop
6.2 Kali命令行安装
    $ wget http://download.redis.io/releases/redis-5.0.8.tar.gz
    $ tar xzf redis-5.0.8.tar.gz
    $ cd redis-5.0.8
    $ make
运行-服务端
    $ src/redis-server
运行-客户端
    $ src/redis-cli
    redis> set foo bar
    OK
    redis> get foo
    "bar"

6.3 windows 安装
    附上安装包链接
    进入环境：cd "C:\Users\shelleyfu\Desktop\python learning\redis-latest"
    启动服务端：redis-server
    启动客户端：redis-cli 看到127.0.0.1:6379则安装成功

    keys* 显示所有的安装应用

7. Redis的配置文件
ubuntu文件位置：/etc/redis/redis.conf

当redis作为守护进程运行的时候，它会写一个 pid 到 /var/run/redis.pid 文件里面。
daemonize no

监听端口号，默认为 6379，如果你设为 0 ，redis 将不在 socket 上监听任何客户端连接。
port 6379

设置数据库的数目。
databases 16

根据给定的时间间隔和写入次数将数据保存到磁盘
下面的例子的意思是：
900 秒内如果至少有 1 个 key 的值变化，则保存
300 秒内如果至少有 10 个 key 的值变化，则保存
60 秒内如果至少有 10000 个 key 的值变化，则保存

save 900 1
save 300 10
save 60 10000

监听端口号，默认为 6379，如果你设为 0 ，redis 将不在 socket 上监听任何客户端连接。
port 6379

Redis默认只允许本地连接，不允许其他机器连接
bind 127.0.0.1

更多配置文件:https://www.cnblogs.com/kreo/p/4423362.html

8. Redis数据库简单使用
    DBSIZE      查看当前数据库的key数量 8
    keys *      查看key的内容
    FLUSHDB     清空当前数据库的key的数量
    FLUSHALL    清空所有库的key(慎用)
    exists key   判断key是否存在
kali:
    src/redis-cli
    ls                          查看redis.config等配置文件
    vim redis.conf              查看,no 改成yes

    src/redis-server/redis-conf (daemonize no 改成yes 就不会堵塞了）
    ps -aux | grep redis
    src/redis-cli               成功连接客户端
    kill 8975                   退出连接
cmd:
    redis-server
    redis.windows.conf
    redis-cli.exe
主从配置文件修改
kali:
    ls
    vim redis.conf              bind ip改成从机IP，或者0.0.0.0
    cp redis.conf slave.conf    复制主的文件改成从属文件
    vim slave.conf              bind ip改成主机IP,192.168.189.128, replicaof 192.168.189.128 6379, port改为6378,不能小于1024，与主端口不同
    src/redis-server redis.conf  开启服务端
    src/redis-server slave.conf #电脑没有创建好
    ps -aux | grep redis
新开一个标签页：
    src/redis-cli -p 6378 -h 192.168.189.128
新开一个标签页：
    src/redis-cli -p 6379
同时输入
    keys * 主从保持一致，输出结果相同,但存只能读取，主才能写入
-6379：
    set k1 v1
kali可以拍个快照做版本控制














